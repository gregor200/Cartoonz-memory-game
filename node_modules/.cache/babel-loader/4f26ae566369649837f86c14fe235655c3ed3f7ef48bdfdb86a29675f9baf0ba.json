{"ast":null,"code":"var _jsxFileName = \"/home/gregory/Documents/memorygame/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport Game from \"./game\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [score, setScore] = useState(0);\n  const [Bestscore, setBestscore] = useState(0);\n  const [clicked, setClicked] = useState([]);\n  const change = e => {\n    let id = e.target.id;\n    if (clicked.includes(id)) {\n      if (score > Bestscore) {\n        setBestscore(score);\n      }\n      setScore(0);\n      setClicked([]);\n    } else {\n      setClicked(clicked.concat(id));\n      setScore(score + 1);\n    }\n  };\n  useEffect(() => {\n    const shuffle = () => {\n      setClicked();\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cartoonz memory game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scores\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"High Score: \", Bestscore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Game, {\n      change: change\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XvfyWqZEWa81kbxedgKG8G2AOEA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Game","jsxDEV","_jsxDEV","App","_s","score","setScore","Bestscore","setBestscore","clicked","setClicked","change","e","id","target","includes","concat","shuffle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/gregory/Documents/memorygame/src/App.js"],"sourcesContent":["import './App.css';\nimport React, {useEffect, useState} from \"react\"\nimport Game from \"./game\"\n\n\nfunction App() {\n   const [score, setScore] = useState(0);\n   const [Bestscore, setBestscore] = useState(0);\n   const [clicked, setClicked] = useState([]);\n\n   const change = (e) => {\n    let id = e.target.id;\n    if(clicked.includes(id)) {\n      if(score > Bestscore) {\n        setBestscore(score)\n      }\n      setScore(0);\n      setClicked([]);\n    }\n    else {\n      setClicked(clicked.concat(id));\n      setScore(score + 1);\n    }\n   }\n\n   useEffect(() => {\n   const shuffle = () => {\n      setClicked()\n    }\n   })\n   \n\n  return (\n    <div className='content'>\n    <header>\n     \n    <h1>Cartoonz memory game</h1>\n    <div className='scores'>\n      <h2>Score: {score}</h2>\n      <h2>High Score: {Bestscore}</h2>\n    </div>\n    </header>\n     \n    <Game change = {change} />\n\n\n   </div>\n  )\n}\n\n\n export default App;\n\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,IAAI,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGzB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,MAAM,GAAIC,CAAC,IAAK;IACrB,IAAIC,EAAE,GAAGD,CAAC,CAACE,MAAM,CAACD,EAAE;IACpB,IAAGJ,OAAO,CAACM,QAAQ,CAACF,EAAE,CAAC,EAAE;MACvB,IAAGR,KAAK,GAAGE,SAAS,EAAE;QACpBC,YAAY,CAACH,KAAK,CAAC;MACrB;MACAC,QAAQ,CAAC,CAAC,CAAC;MACXI,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,MACI;MACHA,UAAU,CAACD,OAAO,CAACO,MAAM,CAACH,EAAE,CAAC,CAAC;MAC9BP,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACrB;EACD,CAAC;EAEDP,SAAS,CAAC,MAAM;IAChB,MAAMmB,OAAO,GAAGA,CAAA,KAAM;MACnBP,UAAU,EAAE;IACd,CAAC;EACF,CAAC,CAAC;EAGH,oBACER,OAAA;IAAKgB,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACxBjB,OAAA;MAAAiB,QAAA,gBAEAjB,OAAA;QAAAiB,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAC7BrB,OAAA;QAAKgB,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrBjB,OAAA;UAAAiB,QAAA,GAAI,SAAO,EAACd,KAAK;QAAA;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACvBrB,OAAA;UAAAiB,QAAA,GAAI,cAAY,EAACZ,SAAS;QAAA;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC5B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACG,eAETrB,OAAA,CAACF,IAAI;MAACW,MAAM,EAAIA;IAAO;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAGrB;AAET;AAACnB,EAAA,CA3CQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AA8CX,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}