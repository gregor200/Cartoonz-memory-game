{"ast":null,"code":"var _jsxFileName = \"/home/gregory/Documents/memorygame/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport Game from \"./game\";\nimport uniqid from \"uniqid\";\nimport flinstone from \"./imgs/flinstone.png\";\nimport homer from \"./imgs/homer.jpg\";\nimport patrick from \"./imgs/patrick.jpeg\";\nimport peppa from \"./imgs/peppapig.webp\";\nimport pikachu from \"./imgs/pikachu.jpeg\";\nimport buzz from \"./imgs/buzz.jpg\";\nimport mickey from \"./imgs/mickey.jpeg\";\nimport stewie from \"./imgs/stewie.png\";\nimport tom from \"./imgs/tom.jpg\";\nimport eye from \"./imgs/eye.avif\";\nimport schulz from \"./imgs/schulz.jpg\";\nimport phineas from \"./imgs/phineas.jpeg\";\nimport star from \"./imgs/star.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [score, setScore] = useState(0);\n  const [Bestscore, setBestscore] = useState(0);\n  const [clicked, setClicked] = useState([]);\n  const [characters, setCharacters] = useState([{\n    name: \"Flintstone\",\n    src: flinstone,\n    id: \"flintstsone\",\n    key: uniqid()\n  }, {\n    name: \"Homer\",\n    src: homer,\n    id: \"homer\",\n    key: uniqid()\n  }, {\n    name: \"Patrick\",\n    src: patrick,\n    id: \"patrick\",\n    key: uniqid()\n  }, {\n    name: \"Peppa\",\n    src: peppa,\n    id: \"peppa\",\n    key: uniqid()\n  }, {\n    name: \"Pikachu\",\n    src: pikachu,\n    id: \"pikachu\",\n    key: uniqid()\n  }, {\n    name: \"Buzz\",\n    src: buzz,\n    id: \"buzz\",\n    key: uniqid()\n  }, {\n    name: \"Mickey\",\n    src: patrick,\n    id: \"patrick\",\n    key: uniqid()\n  }, {\n    name: \"Patrick\",\n    src: patrick,\n    id: \"patrick\",\n    key: uniqid()\n  }, {\n    name: \"Patrick\",\n    src: patrick,\n    id: \"patrick\",\n    key: uniqid()\n  }]);\n  const change = e => {\n    let id = e.target.id;\n    if (clicked.includes(id) === true) {\n      if (score > Bestscore) {\n        setBestscore(score);\n      }\n      setScore(0);\n      setClicked([]);\n    } else {\n      setClicked(clicked.concat(id));\n      setScore(score + 1);\n    }\n  };\n  function shuffle() {\n    setCharacters(characters.sort(function (a, b) {\n      return 0.5 - Math.random();\n    }));\n  }\n  useEffect(() => {\n    shuffle();\n  }, [clicked]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cartoonz memory game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scores\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"High Score: \", Bestscore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Game, {\n      change: change,\n      characters: characters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9cRnaUTt+fUU8WSpnLq8zKzDESo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Game","uniqid","flinstone","homer","patrick","peppa","pikachu","buzz","mickey","stewie","tom","eye","schulz","phineas","star","jsxDEV","_jsxDEV","App","_s","score","setScore","Bestscore","setBestscore","clicked","setClicked","characters","setCharacters","name","src","id","key","change","e","target","includes","concat","shuffle","sort","a","b","Math","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/gregory/Documents/memorygame/src/App.js"],"sourcesContent":["import './App.css';\nimport React, {useEffect, useState} from \"react\"\nimport Game from \"./game\";\nimport uniqid from \"uniqid\"\n\nimport flinstone from \"./imgs/flinstone.png\";\nimport homer from \"./imgs/homer.jpg\";\nimport patrick from \"./imgs/patrick.jpeg\";\nimport peppa from \"./imgs/peppapig.webp\";\nimport pikachu from \"./imgs/pikachu.jpeg\";\nimport buzz from \"./imgs/buzz.jpg\";\nimport mickey from \"./imgs/mickey.jpeg\";\nimport stewie from \"./imgs/stewie.png\";\nimport tom from \"./imgs/tom.jpg\";\nimport eye from \"./imgs/eye.avif\";\nimport schulz from \"./imgs/schulz.jpg\";\nimport phineas from \"./imgs/phineas.jpeg\";\nimport star from \"./imgs/star.png\";\n\n\n\nfunction App() {\n   const [score, setScore] = useState(0);\n   const [Bestscore, setBestscore] = useState(0);\n   const [clicked, setClicked] = useState([]);\n   const [characters, setCharacters] = useState(\n    [ {name: \"Flintstone\", src: flinstone, id: \"flintstsone\", key: uniqid()},\n      {name: \"Homer\", src: homer, id: \"homer\", key: uniqid()},\n      {name: \"Patrick\", src: patrick, id: \"patrick\", key: uniqid()},\n      {name: \"Peppa\", src: peppa, id: \"peppa\", key: uniqid()},\n      {name: \"Pikachu\", src: pikachu, id: \"pikachu\", key: uniqid()},\n      {name: \"Buzz\", src: buzz, id: \"buzz\", key: uniqid()},\n      {name: \"Mickey\", src: patrick, id: \"patrick\", key: uniqid()},\n      {name: \"Patrick\", src: patrick, id: \"patrick\", key: uniqid()},\n      {name: \"Patrick\", src: patrick, id: \"patrick\", key: uniqid()},\n     \n  ]\n    )\n\n   const change = (e) => {\n    let id = e.target.id;\n    if(clicked.includes(id) === true) {\n      if(score > Bestscore) {\n        setBestscore(score)\n      }\n      setScore(0);\n      setClicked([]);\n    }\n    else {\n      setClicked(clicked.concat(id));\n      setScore(score + 1);\n    }\n   }\n\n   function shuffle() {\n    setCharacters(characters.sort( function(a, b) {return 0.5 - Math.random()}))\n  }\n\n   useEffect(() => {\n     shuffle()\n   }, [clicked])\n  \n   \n\n  return (\n    <div className='content'>\n    <header>\n     \n    <h1>Cartoonz memory game</h1>\n    <div className='scores'>\n      <h2>Score: {score}</h2>\n      <h2>High Score: {Bestscore}</h2>\n    </div>\n    </header>\n     \n    <Game change = {change} characters = {characters} />\n\n\n   </div>\n  )\n}\n\n\n export default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}